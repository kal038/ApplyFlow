name: ApplyFlow CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      # Build and test frontend
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: "./frontend/package-lock.json"

      - name: Install frontend dependencies
        run: cd frontend && npm ci

      - name: Build frontend
        run: cd frontend && npm run build

      # Docker build and push
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build and push backend
      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend-node
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/applyflow-backend:latest,${{ secrets.DOCKERHUB_USERNAME }}/applyflow-backend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Build and push frontend
      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/applyflow-frontend:latest,${{ secrets.DOCKERHUB_USERNAME }}/applyflow-frontend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Deploy to EC2 (only on main branch)
      - name: Deploy to EC2
        if: github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Login to Docker Hub
            echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

            # Stop and remove existing containers
            docker-compose down || true

            # Pull latest images
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/applyflow-backend:latest
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/applyflow-frontend:latest

            # Start the containers with the new images
            docker-compose up -d

            # Clean up unused images
            docker image prune -af
